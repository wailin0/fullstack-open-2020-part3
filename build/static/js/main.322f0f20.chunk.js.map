{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","props","persons","filter","person","name","toLowerCase","includes","map","p","key","id","number","onClick","deletePerson","PersonForm","onSubmit","submitHandler","value","newName","onChange","nameChangeHandler","newPhone","phoneChangeHandler","type","Filter","filterHandler","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","Notification","error","success","className","App","useState","setPersons","setNewName","setNewPhone","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","e","target","existingUserID","undefined","preventDefault","find","window","confirm","catch","err","setTimeout","newPersons","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.322f0f20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Persons = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase())).map(p => (\r\n                    <p key={p.id}>{p.name} {p.number} <button onClick={() => props.deletePerson(p.id, p.name)}>delete</button></p>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <>\r\n            <h2>add a new </h2>\r\n            <form onSubmit={props.submitHandler}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={props.nameChangeHandler}/>\r\n                </div>\r\n                <div>\r\n                    number: <input value={props.newPhone} onChange={props.phoneChangeHandler}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        filter shown with <input value={props.filter} onChange={props.filterHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id, newPerson) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson}","import React from \"react\";\r\n\r\nconst Notification = (props) => {\r\n    if (props.error === null && props.success === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                props.error &&\r\n                <div className=\"error\">\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            {\r\n                props.success &&\r\n                <div className=\"success\">\r\n                    {props.success}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Notification","import React, {useEffect, useState} from 'react'\r\nimport Persons from \"./components/Persons\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhone, setNewPhone] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService.getAll()\r\n            .then(persons => {\r\n                setPersons(persons)\r\n            })\r\n    }, [])\r\n\r\n    const nameChangeHandler = e => {\r\n        setNewName(e.target.value)\r\n    }\r\n\r\n    const phoneChangeHandler = e => {\r\n        setNewPhone(e.target.value)\r\n    }\r\n\r\n    const filterHandler = e => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    const deletePerson = (id, name) => {\r\n        if (window.confirm(`Delete ${name}?`)) {\r\n            personService.deletePerson(id)\r\n                .then(() => {\r\n                    const newPersons = persons.filter(p => p.id !== id)\r\n                    setPersons(newPersons)\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(`Information of ${newName} has already been removed from server`)\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    },3000)\r\n                })\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        const newPerson = {name: newName, number: newPhone}\r\n        let existingUserID = undefined\r\n        e.preventDefault()\r\n        if (persons.find(p => {\r\n            if (p.name === newName) {\r\n                existingUserID = p.id\r\n                return p.name\r\n            }\r\n        })) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                personService.update(existingUserID, newPerson)\r\n                    .then(response => {\r\n                        setPersons(\r\n                            persons.map((person) =>\r\n                                person.id !== response.id ? person : response\r\n                            )\r\n                        )\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage(`Information of ${newName} has already been removed from server`)\r\n                            setTimeout(() => {\r\n                            setErrorMessage(null)\r\n                        },3000)\r\n                    })\r\n            }\r\n        } else {\r\n            const newPerson = {name: newName, number: newPhone}\r\n            personService.create(newPerson)\r\n                .then(person => {\r\n                    setPersons([...persons, person])\r\n                    setSuccessMessage(`Added ${newName}`)\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    },3000)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification error={errorMessage} success={successMessage} />\r\n            <Filter filter={filter}\r\n                    filterHandler={filterHandler}/>\r\n            <h3>Add a new </h3>\r\n            <PersonForm submitHandler={submitHandler}\r\n                        newName={newName}\r\n                        newPhone={newPhone}\r\n                        nameChangeHandler={nameChangeHandler}\r\n                        phoneChangeHandler={phoneChangeHandler}/>\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons}\r\n                     filter={filter}\r\n                     deletePerson={deletePerson}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from \"./App\";\r\nimport './index.css'\r\n\r\n\r\nconst Index = () => {\r\n    return (\r\n        <App />\r\n    )\r\n}\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Index />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}